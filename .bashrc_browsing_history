# ~/.bashrc_browsing_history

# Rewrite a sublayer of 'cd' with a browsing history. Moreover 'ls' follows
# 'cd' if possible and relevant.
# Define smart : 'cd -' go to the previous working directory (wd), 
#                'cd +' go to the next one wd, 
#                'cd :<i>' go to the <i>th one wd in the browsing history,
#                and 'bhistory' to show it the current browsing history.
################################################################################

# Environment variables
declare -a HIST_DIR=([0]="$PWD")
CUR=0
NUM=0

##
# Description: Show the browsing history in your current Bash Shell.
bhistory(){
   for i in ${!HIST_DIR[*]}; do
      if test $i -eq $CUR; then
         echo -n "*"
      else
         echo -n " "
      fi
      echo "$i ${HIST_DIR[$i]}"
   done
}

##
# Description: Trigger action after a cd to complete browsing history 
#               (or do a 'ls').
# Parameter:
#  $1: the repository parameter of 'cd' for example $HOME, /etc/, 
#      or . (current working directory) ...
changedir(){
   local CUR_SAUV=$CUR
   local modify_history=true

   # go to the previous working directory
   if test "$1" = "-"; then
      if test $CUR -gt 0; then
         CUR=$(($CUR-1))
      fi
      rep=${HIST_DIR[$CUR]}
      modify_history=false
   # go to the next working directory
   elif test "$1" = "+"; then
      if test $CUR -lt $NUM; then
         CUR=$(($CUR+1))
      fi
      rep="${HIST_DIR[$CUR]}"
      modify_history=false
   # choose the repository
   elif [[ "$1" =~ ^:[1-9]*[0-9]$ ]]; then
      i=$(echo "$1" | sed 's/^://')
      if test $i -ge 0 -o $i -le $NUM; then
         rep="${HIST_DIR[$i]}"
         CUR=$i
      fi
      rep="${HIST_DIR[$CUR]}"
      modify_history=false
   # traditional action for a 'cd'
   elif test "$1" = ""; then
      rep="$HOME"
   else
      rep="$1"
   fi

   cd "$rep"
   if test "$?" -ne 0; then
      CUR="$CUR_SAUV"
      return 1
   fi
   if $modify_history; then
      if test "$PWD" != "${HIST_DIR[$CUR_SAUV]}"; then
         NUM=$(($NUM+1))
         HIST_DIR[$NUM]="$PWD"
         if test $CUR -eq $CUR_SAUV; then
            CUR=$NUM
         fi
      fi
   fi

   # 'ls' follows 'cd' if possible and relevant
   if test $(ls -C | wc -l) -le 4; then
      ls --color=auto
   fi
}

# aliases
alias chistory="history"
alias cd="changedir $1"
