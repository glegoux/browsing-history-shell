# ~/.bashrc_browsing_history
#
# Writing an overlayer of 'cd' with a browsing history. 
# Moreover 'ls' follows 'cd', if possible and relevant.
# usage : 'cd -' go to the previous working directory (wd), 
#         'cd +' go to the next one wd, 
#         'cd :<i>' go to the <i>th one wd in the browsing history,
#         'bhistory' show the current browsing history.
################################################################################


# Environment variables
declare -a BHIST_DIRS=([0]="$PWD")
declare -i BHIST_CUR_INDEX=0
declare -i BHIST_LEN=1


##
# Description: Show the browsing history in your current Bash Shell.
# Global: BHIST_DIRS
__bhist_bhistory() {

  for i in ${!BHIST_DIRS[*]}; do
    if test $i -eq $BHIST_CUR_INDEX; then
      echo -n "*"
    else
      echo -n " "
    fi
    echo "$i ${BHIST_DIRS[$i]}"
  done
}


##
# Description: Trigger action after a cd to complete browsing history 
#              and show content of a folder (with 'ls'), if it's relevant.
# Global: HOME, PWD, BHIST_DIRS, BHIST_CUR_INDEX, BHIST_LEN
# Parameter:
#   $1: the repository parameter of 'cd', for instance "$HOME", "/etc/", "", 
#       ".", "..", ... or new metacharacters: "-", "+", and ":<i>" (see usage).
# Return:
#   0: The directory and browsing history were successfully changed,
#      display on STDOUT the content of new current directory (if no too long),
#      and a possible warning on STDERR.
#   1: An error occurred with a message on STDERR.
__bhist_changedir() {

  local -i saved_index=$BHIST_CUR_INDEX
  local modify_history=true
  local rep=''

  # go to the previous working directory
  if test "$1" = "-"; then
    if test -d '-'; then
      echo "WARNING: 'cd -', folder '-' exists, go into this with 'cd ./-'."  >&2
    fi
    if test $BHIST_CUR_INDEX -eq 0; then
      echo "ERROR: 'cd -', impossible out of range browsing history."  >&2
      return 1
    fi
    BHIST_CUR_INDEX=$(($BHIST_CUR_INDEX-1))
    rep=${BHIST_DIRS[$BHIST_CUR_INDEX]}
    modify_history=false

  # go to the next working directory
  elif test "$1" = "+"; then
    if test -d '+'; then
      echo "WARNING: 'cd +', folder '+' exists, go into this with 'cd ./+'."  >&2
    fi
    if test $BHIST_CUR_INDEX -eq $(($BHIST_LEN-1)); then
      echo "ERROR: 'cd +', impossible out of range browsing history."  >&2
      return 1
    fi
    BHIST_CUR_INDEX=$(($BHIST_CUR_INDEX+1))
    rep="${BHIST_DIRS[$BHIST_CUR_INDEX]}"
    modify_history=false

  # choose the repository
  elif [[ "$1" =~ ^:[0-9]+$ ]]; then
    i=$(echo "$1" | sed 's/^://')
    if test -d ":$i"; then
      echo "WARNING: 'cd :$i', folder ':$i' exists, go into this with 'cd ./:$i'." >&2
    fi
    if test $i -lt 0 -o $i -ge $BHIST_LEN; then
      echo "ERROR: 'cd :$i', impossible out of range browsing history." >&2
      return 1
    fi
    rep="${BHIST_DIRS[$i]}"
    BHIST_CUR_INDEX=$i
    rep="${BHIST_DIRS[$BHIST_CUR_INDEX]}"
    modify_history=false

  # traditional action for a 'cd'
  elif test "$1" = ""; then
    rep="$HOME"
  else
    rep="$1"
  fi

  cd "$rep"

  if test $? -ne 0; then
    BHIST_CUR_INDEX="$saved_index"
    return 1
  fi

  if $modify_history; then
    # don't have an consecutive duplicate in the browsing history
    if test "$PWD" != "${BHIST_DIRS[$(($BHIST_LEN-1))]}"; then
      BHIST_DIRS[$BHIST_LEN]="$PWD"
      BHIST_LEN=$(($BHIST_LEN+1))
    fi
    BHIST_CUR_INDEX=$(($BHIST_LEN-1))
  fi

  # 'ls' follows 'cd' if possible and relevant
  if test $(ls -C | wc -l) -le 4; then
    ls --color=auto
  fi
}


# Aliases
alias cd="__bhist_changedir $1"
alias bhistory="__bhist_bhistory"
alias chistory="history"
